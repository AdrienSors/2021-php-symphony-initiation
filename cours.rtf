GIT est un outil de Versionning => VCS (Version Control System)
Il permet d'avoir plusieurs versions des fichiers qui composent notre application (site web ou autre),
et ainsi travailler en équipe tout en gardant des historiques des fichiers sur lesquels on travaille.

Il existe plusieurs concurrents de GIT (SVN) mais GIT est le plus utilisé.
GITHUB est ce qu'on appelle un hébergeur de répositories (dépôts) GIT.
C-a-d qu'il se charge d'héberger les versions de notre application et ainsi nous pouvons y accéder en ligne.

Il existe plusieurs hébergeurs (GITBUCKET...) mais Github est le plus utilisé.

git init : initialise un dépôt (repository) git
git config --global user.email "adresse@email.com"
git config --global user.name "Prénom NOM"
git config --list -appuyer sur Q pour quitter)
git add <noms des fichiers> : on envoie les fichiers dans l'index en attente de commit
git status: donnes des infos sur le dépôt
git commit -m "message de commit" : créer une version du dépôt avec un message
git log : afficher l'historique des commits
git remote add <nom de la branche> <lien vers le dépôt> : créer un lien entre le dépôt local et le dépôt distant
git push <remote> <nom de la branche> : envoie le contenu du dépôt local sur le dépôt en ligne
git push origin master : envoie sur la branche principale en ligne

pour modifier le dernier message de commit après un push
git commit --amend -m "nouveau message de commit"
git push <remote> <branche> -f

### Les branches
# Master : branche principale
git branch <nom d'une branche inexistante> : crée une branche.
git branch -l : liste des branches
git branch -D <branch_name> : supprimer la branche

git checkout -b <nom de la branche inexistante> : crée une branche et je me positionne sur celle-ci.
git checkout <nom d'une branche existante> : je me positionne sur la branche indiquée.
